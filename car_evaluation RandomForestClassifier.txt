import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics

data = pd.read_csv('car_evaluation.csv')

data.head(5)

data.columns

data.isnull().sum()

data['Class_Values'].value_counts()

data['Class_Values'].value_counts().plot(kind = 'bar')
plt.show()

data['safety'].value_counts().plot(kind = 'bar')
plt.show()

import seaborn as sns
sns.countplot(data['buying'], hue = data['Class_Values'])
plt.show()

data.info()

X = data.drop(['Class_Values'], axis = 1)
y = data['Class_Values']

from sklearn.preprocessing import OrdinalEncoder
buying_price_category = ['low', 'med', 'high', 'vhigh']
maint_cost_category = ['low', 'med', 'high', 'vhigh']
doors_category = ['2', '3', '4', '5more']
person_capacity_category = ['2', '4', 'more']
lug_boot_category = ['small', 'med', 'big']
safety_category = ['low', 'med', 'high']
all_categories = [buying_price_category, maint_cost_category,doors_category,person_capacity_category,lug_boot_category,safety_category]
oe = OrdinalEncoder(categories= all_categories)
X = oe.fit_transform( data[['buying', 'maint', 'doors', 'persons', 'lug_boot', 'safety']])

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state=0)

DT_classifier = DecisionTreeClassifier(criterion= 'entropy', random_state=0, max_depth= 3, min_samples_split= 10)
DT_classifier.fit(X_train, y_train)

y_pred = DT_classifier.predict(X_test)

confusion_matrix(y_test, y_pred)

from sklearn import tree

fig = plt.figure(figsize=(15,12))
_ = tree.plot_tree(DT_classifier, feature_names=data.columns[:-1], class_names = DT_classifier.classes_, filled = True)

from sklearn.ensemble import RandomForestClassifier

classifier = RandomForestClassifier(n_estimators = 100, criterion = 'entropy', random_state = 0)
classifier.fit(X_train, y_train)
